<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access/>
        <active>true</active>
        <api_name>x_caas_quality.bq_RoleManager</api_name>
        <client_callable>false</client_callable>
        <description>Manage operations related to users / groups / roles and inheritance
- add inherited roles from a group to all users in the group a</description>
        <name>bq_RoleManager</name>
        <script><![CDATA[gs.include("PrototypeServer");

var bq_RoleManager = Class.create();

bq_RoleManager.prototype = {
  initialize: function() {
  },

  bq_addInheritedRoles: function(/* GlideRecord */ groupRole) {
	  var members = new GlideRecord ('x_caas_quality_bq_group_member');
	  //var ug = new GlideUserGroup(); 
	  members.addQuery('u_bq_group', groupRole.u_bq_group);
	  members.query();
    while (members.next()) {
      gs.addInfoMessage(gs.getMessage("Добавлена роль для") + ": " + members.u_bq_user.name);
      var role = new GlideRecord('sys_user_has_role'); 
      role.initialize();
      role.user = members.u_bq_user; 
      role.role = groupRole.u_bq_role; 
      role.inherited = groupRole.u_inherits;
      role.granted_by = groupRole.u_bq_group; 
      role.insert();
    }    
    //this.bq_addInheritedToGroups(groupRole); 
  },

  bq_deleteInheritedRoles: function(/* GlideRecord */ groupRole) {
    var gr = new GlideRecord('sys_user_has_role');
    gr.initialize();
    gr.addQuery('granted_by', groupRole.u_bq_group);
    gr.addQuery('role', groupRole.u_bq_role);
    gr.addQuery('inherited', true);
    gr.deleteMultiple();
    var msgArray = new Array();
    msgArray.push(groupRole.u_bq_role.name + "");
    msgArray.push(groupRole.u_bq_group.name + "");
    gs.addInfoMessage(gs.getMessage('Удаление пользователя: {0}, из группы: {1}', msgArray));
    this.bq_deleteInheritedFromGroups(groupRole); 
  },

  bq_deleteInheritedFromGroups: function( groupRole) {
    var gr = new GlideRecord ('x_caas_quality_bq_group_role');
    gr.initialize();
    gr.addQuery('u_bq_group', groupRole.u_bq_group);
    gr.addQuery('role', groupRole.u_bq_role);
    gr.addQuery('u_inherited', true);
    gr.deleteMultiple();
    var msgArray = new Array();
    msgArray.push(groupRole.u_bq_role.name + "");
    msgArray.push(groupRole.u_bq_group.name + "");
    gs.addInfoMessage(gs.getMessage('Удалена наследуемая роль: {0}, группа: {1}', msgArray));

  },

  bq_deleteAllRoles: function(/* GlideRecord */ groupRole) {
    var gr = new GlideRecord('sys_user_has_role');
    gr.initialize();
    gr.addQuery('granted_by', groupRole.u_bq_group);
    gr.addQuery('role', groupRole.u_bq_role);
    gr.deleteMultiple();
    var msgArray = new Array();
    msgArray.push(groupRole.u_bq_role.name + "");
    msgArray.push(groupRole.u_bq_group.name + "");
    gs.addInfoMessage(gs.getMessage('Удаление всех ролей: {0}, группа: {1}', msgArray));
  },
 



z: function() {}
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>x-rubesdmi</sys_created_by>
        <sys_created_on>2015-04-03 10:06:02</sys_created_on>
        <sys_id>8bb7f7776f433500724708c6eb3ee4da</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>bq_RoleManager</sys_name>
        <sys_package display_value="QUALITY" source="x_caas_quality">fe192e224f42b380b41f05818110c7b7</sys_package>
        <sys_policy/>
        <sys_scope display_value="QUALITY">fe192e224f42b380b41f05818110c7b7</sys_scope>
        <sys_update_name>sys_script_include_8bb7f7776f433500724708c6eb3ee4da</sys_update_name>
        <sys_updated_by>x-rubesdmi</sys_updated_by>
        <sys_updated_on>2015-04-03 10:06:02</sys_updated_on>
    </sys_script_include>
</record_update>
