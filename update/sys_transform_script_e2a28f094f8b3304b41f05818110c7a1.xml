<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_transform_script">
    <sys_transform_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <map display_value="Fill Assign matrix ">5f075ecd4f473304b41f05818110c73b</map>
        <order>100</order>
        <script><![CDATA[(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {
	if(action =="insert")
		ignore =true;
	
	var u_sys_id = source.u_sys_id.toString();
	var user = new GlideRecord ('sys_user');
	if( user.get('email', source.u_email)){
		//матрица ответственных ---------------------------------
		var gr = new GlideRecord ('x_caas_quality_bq_assign_matrix');
		gr.addQuery('u_agree_list', 'CONTAINS', u_sys_id).addOrCondition('u_notify_list', 'CONTAINS', u_sys_id).addOrCondition('u_bq_user', 'CONTAINS', u_sys_id);
		gr.query();
		while(gr.next()) {
			var str_ag = '';
			var str_not = '';
			if(gr.u_agree_list != ''){
				ag_list = gr.u_agree_list.split(',');
				var findIndex = ag_list.indexOf(u_sys_id);
				if (findIndex != '-1'){
					ag_list.splice(ag_list.indexOf(u_sys_id), 1, user.sys_id);
					str_ag = ag_list.join(',');
					gr.u_agree_list = str_ag;
				}
			}
			findIndex = '-1';
			if(gr.u_notify_list != ''){
				not_list = gr.u_notify_list.split(',');
				findIndex = not_list.indexOf(u_sys_id);
				if (findIndex != '-1'){
					not_list.splice(findIndex, 1, user.sys_id);
					str_not = not_list.join(',');
					gr.u_notify_list = str_not;
				}	
			}
			if(gr.u_bq_user != ''){
				if (gr.u_bq_user.toString() == u_sys_id ){
					gr.u_bq_user = user.sys_id;
				}
			}
			gr.update();
		}
		//---------------------------------матрица ответственных 
		//Группа исполнителей---------------------------------
		var gr = new GlideRecord ('x_caas_quality_bq_usergroup');
		gr.addQuery('u_bq_coors', 'CONTAINS', u_sys_id).addOrCondition('u_bq_managers', 'CONTAINS', u_sys_id)
		gr.query();
		while(gr.next()) {
			var str_coors = '';
			var str_manag = '';
			if(gr.u_bq_coors != ''){
				coors_list = gr.u_bq_coors.split(',');
				var findIndex = coors_list.indexOf(u_sys_id);
				if (findIndex != '-1'){
					coors_list.splice(coors_list.indexOf(u_sys_id), 1, user.sys_id);
					str_coors = coors_list.join(',');
					gr.u_bq_coors = str_coors;
				}
			}
			findIndex = '-1';
			if(gr.u_bq_managers != ''){
				man_list = gr.u_bq_managers.split(',');
				findIndex = man_list.indexOf(u_sys_id);
				if (findIndex != '-1'){
					man_list.splice(findIndex, 1, user.sys_id);
					str_manag = man_list.join(',');
					gr.u_bq_managers = str_manag;
				}	
			}
			gr.update();
		}
		//---------------------------------Группа исполнителей
		//bq_group_member---------------------------------
		var gr = new GlideRecord ('x_caas_quality_bq_group_member');
		gr.addQuery('u_bq_user', 'CONTAINS', u_sys_id);
		gr.query();
		while(gr.next()) {
			if(gr.u_bq_user != ''){
				if (gr.u_bq_user.toString() == u_sys_id ){
					gr.u_bq_user = user.sys_id;
				}
			}
			gr.update();
		}
		//---------------------------------bq_group_member
		//Бренды---------------------------------
		var gr = new GlideRecord ('x_caas_quality_bq_brand');
		gr.addQuery('u_bq_recipients', 'CONTAINS', u_sys_id);
		gr.query();
		while(gr.next()) {
			var str = '';
			if(gr.u_bq_recipients != ''){
				var list = gr.u_bq_recipients.split(',');
				var findIndex = list.indexOf(u_sys_id);
				if (findIndex != '-1'){
					list.splice(list.indexOf(u_sys_id), 1, user.sys_id);
					str = list.join(',');
					gr.u_bq_recipients = str;
				}
			}
			gr.update();
		}
		//---------------------------------Бренды
		//Подтема---------------------------------
		var gr = new GlideRecord ('x_caas_quality_bq_subtopic');
		gr.addQuery('u_bq_agree_list', 'CONTAINS', u_sys_id).addOrCondition('u_bq_notif_list', 'CONTAINS', u_sys_id)
		gr.query();
		while(gr.next()) {
			var str_ag = '';
			var str_not = '';
			if(gr.u_bq_agree_list != ''){
				ag_list = gr.u_bq_agree_list.split(',');
				var findIndex = ag_list.indexOf(u_sys_id);
				if (findIndex != '-1'){
					ag_list.splice(ag_list.indexOf(u_sys_id), 1, user.sys_id);
					str_ag = ag_list.join(',');
					gr.u_bq_agree_list = str_ag;
				}
			}
			findIndex = '-1';
			if(gr.u_bq_notif_list != ''){
				not_list = gr.u_bq_notif_list.split(',');
				findIndex = not_list.indexOf(u_sys_id);
				if (findIndex != '-1'){
					not_list.splice(findIndex, 1, user.sys_id);
					str_not = not_list.join(',');
					gr.u_bq_notif_list = str_not;
				}	
			}
			gr.update();
		}
		//---------------------------------Подтема
		//Назначение ролей---------------------------------
		var gr = new GlideRecord ('x_caas_quality_bq_role_assignment');
		gr.addQuery('u_employee', 'CONTAINS', u_sys_id);
		gr.query();
		while(gr.next()) {
			if(gr.u_employee != ''){
				if (gr.u_employee.toString() == u_sys_id ){
					gr.u_employee = user.sys_id;
				}
			}
			gr.update();
		}
		//---------------------------------Назначение ролей
		//User Roles---------------------------------
		var gr = new GlideRecord ('sys_user_has_role');
		gr.addQuery('user', 'CONTAINS', u_sys_id);
		gr.query();
		while(gr.next()) {
			if(gr.user != ''){
				if (gr.user.toString() == u_sys_id ){
					//gr.user = user.sys_id;
					gr.setValue('state','inactive');
					gr.update();
					var gr2 = new GlideRecord('sys_user_has_role');
					gr2.initialize(); 
					gr2.role = gr.role; 
					gr2.user = user.sys_id; // это новый юзер
					gr2.insert();
				}
			}
		}
		//---------------------------------User Roles
		//Reports users---------------------------------
		var gr = new GlideRecord ('sys_report_users_groups');
		gr.addQuery('user_id', 'CONTAINS', u_sys_id);
		gr.query();
		while(gr.next()) {
			if(gr.user != ''){
				if (gr.user.toString() == u_sys_id ){	
					//gr.user = user.sys_id;
					// gr.setValue('state','inactive');
					// gr.update();
					// var gr2 = new GlideRecord('sys_user_has_role');
					// gr2.initialize(); 
					// gr2.role = gr.role; 
					// gr2.user = user.sys_id; // это новый юзер
					// gr2.insert();
					gr.user_id = new_sys_id;
					gr.update();
				}
			}
		}
		//---------------------------------Reports users
		//Group users---------------------------------
		var gr = new GlideRecord ('sys_user_grmember');
		gr.addQuery('user', 'CONTAINS', u_sys_id);
		gr.query();
		while(gr.next()) {
			if(gr.user != ''){
				if (gr.user.toString() == u_sys_id ){
					//gr.user = user.sys_id;
					// gr.setValue('state','inactive');
					// gr.update();
					var gr2 = new GlideRecord('sys_user_has_role');
					gr2.initialize(); 
					gr2.role = gr.role; 
					gr2.user = user.sys_id; // это новый юзер
					gr2.insert();
				}
			}
		}
		//---------------------------------Group users
		
	}
})(source, map, log, target);]]></script>
        <sys_class_name>sys_transform_script</sys_class_name>
        <sys_created_by>Petr.Ablyazov@softline.com</sys_created_by>
        <sys_created_on>2019-08-02 10:42:21</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e2a28f094f8b3304b41f05818110c7a1</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>onBefore</sys_name>
        <sys_package display_value="QUALITY" source="x_caas_quality">fe192e224f42b380b41f05818110c7b7</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="QUALITY">fe192e224f42b380b41f05818110c7b7</sys_scope>
        <sys_update_name>sys_transform_script_e2a28f094f8b3304b41f05818110c7a1</sys_update_name>
        <sys_updated_by>leonid.fedorovich@softline.com</sys_updated_by>
        <sys_updated_on>2019-10-22 14:59:38</sys_updated_on>
        <when>onBefore</when>
    </sys_transform_script>
</record_update>
